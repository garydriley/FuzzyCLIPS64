TRUE
FuzzyCLIPS> (batch "drtest02.bat")
TRUE
FuzzyCLIPS> (str-index "" "")                 ; DR0103 - 1
1
FuzzyCLIPS> (str-index "" "a")                ; DR0103 - 2
1
FuzzyCLIPS> (explode$ "")                     ; DR0104 - ()
()
FuzzyCLIPS> (sub-string 1 2 "a")              ; DR0105 - "a"
"a"
FuzzyCLIPS> (sub-string 2 2 "a")              ; DR0105 - ""
""
FuzzyCLIPS> (subseq$ (create$ a) 2 2)     ; DR0106 - ()
()
FuzzyCLIPS> (subseq$ (create$ a) 1 2)     ; DR0106 - (a)
(a)
FuzzyCLIPS> (str-index "a" "aba")             ; DR0109 - 1
1
FuzzyCLIPS> (implode$)                        ; DR0112 - Error
[ARGACCES1] Function 'implode$' expected exactly 1 argument.
FuzzyCLIPS> (sub-string 1 3 "abc")            ; DR0113 - memory loss
"abc"
FuzzyCLIPS> (sub-string 1 3 "abc")            ; DR0113 - memory loss
"abc"
FuzzyCLIPS> (setgen 1)                        ; DR0114 - Error
1
FuzzyCLIPS> (setgen a)                        ; DR0114 - Error
[ARGACCES2] Function 'setgen' expected argument #1 to be of type integer.
FuzzyCLIPS> (read 1 1)                        ; DR0114 - Error
[ARGACCES1] Function 'read' expected no more than 1 argument.
FuzzyCLIPS> (readline 1 1)                    ; DR0114 - Error
[ARGACCES1] Function 'readline' expected no more than 1 argument.
FuzzyCLIPS> (min)                             ; DR0114 - Error
[ARGACCES1] Function 'min' expected at least 1 argument.
FuzzyCLIPS> (max)                             ; DR0114 - Error
[ARGACCES1] Function 'max' expected at least 1 argument.
FuzzyCLIPS> (pi 1)                            ; DR0114 - Error
[ARGACCES1] Function 'pi' expected exactly 0 arguments.
FuzzyCLIPS> (halt 1)                          ; DR0114 - Error
[ARGACCES1] Function 'halt' expected exactly 0 arguments.
FuzzyCLIPS> (mod x y)                         ; DR0114 - Error
[ARGACCES2] Function 'mod' expected argument #1 to be of type integer or float.
FuzzyCLIPS> (setgen 1)                        ; DR0114 - Error
1
FuzzyCLIPS> (gensym 10)                       ; DR0114 - Error
[ARGACCES1] Function 'gensym' expected exactly 0 arguments.
FuzzyCLIPS> (if (eq 1 2) then)                ; DR0115 - Syntax
FALSE
FuzzyCLIPS> (if (eq 1 2) then else)           ; DR0115 - Syntax
FALSE
FuzzyCLIPS> (while (eq 1 2) do)               ; DR0115 - Syntax
FALSE
FuzzyCLIPS> (clear)                           ; DR0120
FuzzyCLIPS> (defrule a 
   (x ?string) 
   => 
   (bind ?m (explode$ ?string)) 
   (bind ?str (implode$ ?m))
   (printout t ?m " " ?str crlf))
FuzzyCLIPS> (defrule b 
   => 
   (bind ?m (explode$ "a b c 1 2 3"))
   (bind ?s (implode$ ?m))
   (printout t ?m " " ?s crlf))
FuzzyCLIPS> (reset)                           ; DR0120
FuzzyCLIPS> (assert (x "a b c 1 2 3"))        ; DR0120
<Fact-1>
FuzzyCLIPS> (run)                             ; DR0120
(a b c 1 2 3) a b c 1 2 3
(a b c 1 2 3) a b c 1 2 3
FuzzyCLIPS> (batch "a*a")                     ; DR0127
[ARGACCES3] Function 'batch' was unable to open file 'a*a'.
FALSE
FuzzyCLIPS> (open "a*a" a)                    ; DR0127
FALSE
FuzzyCLIPS> (fetch "a*a")                     ; DR0127
[TEXTPRO1] Could not open file 'a*a'.
FALSE
FuzzyCLIPS> (clear)                           ; DR0135
FuzzyCLIPS> (defrule rule1 ""
  (token ?level ?token-num)
  (expert ?level|* ?token-num|*)
  =>)
FuzzyCLIPS> (assert (token 2 4))              ; DR0135
<Fact-1>
FuzzyCLIPS> (assert (expert 2 4))             ; DR0135
<Fact-2>
FuzzyCLIPS> (assert (expert 2 2))             ; DR0135
<Fact-3>
FuzzyCLIPS> (assert (expert 2 *))             ; DR0135
<Fact-4>
FuzzyCLIPS> (assert (expert * 4))             ; DR0135
<Fact-5>
FuzzyCLIPS> (assert (expert * *))             ; DR0135
<Fact-6>
FuzzyCLIPS> (assert (expert 4 *))             ; DR0135
<Fact-7>
FuzzyCLIPS> (assert (expert * 2))             ; DR0135
<Fact-8>
FuzzyCLIPS> (agenda)                          ; DR0135
0      rule1: f-1,f-6
0      rule1: f-1,f-5
0      rule1: f-1,f-4
0      rule1: f-1,f-2
For a total of 4 activations.
FuzzyCLIPS> (setgen 1)                        ; DR0156
1
FuzzyCLIPS> (setgen -1)                       ; DR0156
[ARGACCES2] Function 'setgen' expected argument #1 to be of type integer (greater than or equal to 1).
1
FuzzyCLIPS> (gensym)                          ; DR0156
gen1
FuzzyCLIPS> (evenp dlaj)                      ; DR0159
[ARGACCES2] Function 'evenp' expected argument #1 to be of type integer.
FuzzyCLIPS> (evenp 2e1)                       ; DR0159
[ARGACCES2] Function 'evenp' expected argument #1 to be of type integer.
FuzzyCLIPS> (oddp 4.3)                        ; DR0159
[ARGACCES2] Function 'oddp' expected argument #1 to be of type integer.
FuzzyCLIPS> (oddp 5e1)                        ; DR0159
[ARGACCES2] Function 'oddp' expected argument #1 to be of type integer.
FuzzyCLIPS> (/ d 6)                           ; DR0160
[ARGACCES2] Function '/' expected argument #1 to be of type integer or float.
FuzzyCLIPS> (clear)                           ; DR0198
FuzzyCLIPS> (deffacts bugfacts
   (base-count a 2 strand_13)
   (count-bases strand_13 [ t 3 ]))                
FuzzyCLIPS> (defrule total
   ?accum <- (count-bases ?id $?bases-with-counts)
   (not (increment-base ? ?id ?))
   ?abase <- (base-count ?base ?count ?id)
   =>
   (retract ?accum ?abase)
   (bind ?bases-and-counts 
      (create$ [ ?base ?count ] ?bases-with-counts))
   (assert (count-bases ?id ?bases-and-counts)))
FuzzyCLIPS> (reset)                           ; DR0198
FuzzyCLIPS> (run)                             ; DR0198
FuzzyCLIPS> (facts)                           ; DR0198
f-3     (count-bases strand_13 [ a 2 ] [ t 3 ]) CF 1.00 
For a total of 1 fact.
FuzzyCLIPS> (dribble-off)
