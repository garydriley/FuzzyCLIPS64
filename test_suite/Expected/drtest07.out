TRUE
FuzzyCLIPS> (batch "drtest07.bat")
TRUE
FuzzyCLIPS> (clear)                            ; DR0602
FuzzyCLIPS> (subsetp (create$ bar)             ; DR0602
         (create$ "bar"))          ; DR0602 - FALSE
FALSE
FuzzyCLIPS> (member$ fox (create$ "fox"))      ; DR0602 - FALSE
FALSE
FuzzyCLIPS> (clear)                            ; DR0604
FuzzyCLIPS> (defrule foo => (assert (x)))      ; DR0604
FuzzyCLIPS> (bsave "Temp//foo.bin")            ; DR0604
TRUE
FuzzyCLIPS> (clear)                            ; DR0604
FuzzyCLIPS> (defrule bar => (assert (y)))      ; DR0604
FuzzyCLIPS> (bsave "Temp//bar.bin")            ; DR0604
TRUE
FuzzyCLIPS> (clear)                            ; DR0604
FuzzyCLIPS> (bload "Temp//foo.bin")            ; DR0604
TRUE
FuzzyCLIPS> (reset)                            ; DR0604
FuzzyCLIPS> (run)                              ; DR0604
FuzzyCLIPS> (facts)                            ; DR0604
f-1     (x) CF 1.00 
For a total of 1 fact.
FuzzyCLIPS> (bload "Temp//bar.bin")            ; DR0604
TRUE
FuzzyCLIPS> (reset)                            ; DR0604
FuzzyCLIPS> (run)                              ; DR0604
FuzzyCLIPS> (facts)                            ; DR0604
f-1     (y) CF 1.00 
For a total of 1 fact.
FuzzyCLIPS> (clear)                            ; DR0606
FuzzyCLIPS> 
(defrule blah                             ; DR0606
   =>                                     ; DR0606
  (bsave "Temp//me.bin")                  ; DR0606
  (bload "Temp//me.bin"))                 ; DR0606
FuzzyCLIPS> (reset)                            ; DR0606
FuzzyCLIPS> (run)                              ; DR0606
[BLOAD4] The FuzzyCLIPS environment could not be cleared.
Binary load cannot continue.
FuzzyCLIPS> (tan (deg-rad 270))                ; DR0609 - Error
[EMATHFUN3] Singularity at asymptote in 'tan' function.
0.0
FuzzyCLIPS> (sec (deg-rad 270))                ; DR0609 - Error
[EMATHFUN3] Singularity at asymptote in 'sec' function.
0.0
FuzzyCLIPS> (clear)                            ; DR0610
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0610
TRUE
FuzzyCLIPS> (deffunction foo ($?x) ?x ?x FALSE)
FuzzyCLIPS> (foo a b c d e)                    ; DR0610
FALSE
FuzzyCLIPS> (clear)                            ; DR0610
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0610 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0612
FuzzyCLIPS> (release-mem)                      ; DR0612
937 ;; Different number is OK - Reference number
FuzzyCLIPS> (defrule x (not (a)) =>)           ; DR0612
FuzzyCLIPS> (clear)                            ; DR0612
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0612 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0613
FuzzyCLIPS> (release-mem)                      ; DR0613
937 ;; Different number is OK but should be same as reference number
FuzzyCLIPS> (defrule x (not (a)) (not (b))  =>) 
FuzzyCLIPS> (clear)                            ; DR0613
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0613 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0614
FuzzyCLIPS> (release-mem)                      ; DR0614
937 ;; Different number is OK but should be same as reference number
FuzzyCLIPS> (defglobal ?*x* = 3)               ; DR0614
FuzzyCLIPS> (defglobal ?*x* = 4)               ; DR0614
FuzzyCLIPS> (clear)                            ; DR0614
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0614 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0615
FuzzyCLIPS> (release-mem)                      ; DR0615
937 ;; Different number is OK but should be same as reference number
FuzzyCLIPS> (deftemplate x (multifield y) (multifield y))

[PRNTUTIL5] The slot 'y' has already been parsed.

ERROR:
(deftemplate MAIN::x
   (multifield y)
   (multifield y
FuzzyCLIPS> (clear)                            ; DR0615
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0615 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0616
FuzzyCLIPS> (release-mem)                      ; DR0616
937 ;; Different number is OK but should be same as reference number
FuzzyCLIPS> (any-instancep ((?a OBJECT) (?a OBJECT)) TRUE)
[INSQYPSR1] Duplicate instance member variable name in function 'any-instancep'.
FuzzyCLIPS> (clear)                            ; DR0616
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0616 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0617
FuzzyCLIPS> (release-mem)                      ; DR0617
937 ;; Different number is OK but should be same as reference number
FuzzyCLIPS> (bind ?a 3)                        ; DR0617
3
FuzzyCLIPS> (clear)                            ; DR0617
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0617 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0619
FuzzyCLIPS> (explode$ "")                      ; DR0619
()
FuzzyCLIPS> (deftemplate foo (field x) (field y))
FuzzyCLIPS> (explode$ "foo")                   ; DR0619
(foo)
FuzzyCLIPS> (format t "%s"                     ; DR0621
   "The allowed-values attribute cannot be used in conjunction with
                      other value restriction attributes")
The allowed-values attribute cannot be used in conjunction with
                      other value restriction attributes"The allowed-values attribute cannot be used in conjunction with
                      other value restriction attributes"
FuzzyCLIPS> (clear)                            ; DR0623
FuzzyCLIPS> (defclass A (is-a USER) (role abstract)
   (multislot foo (create-accessor read-write)))
FuzzyCLIPS> (defclass B (is-a A)               ; DR0623
   (slot foo (propagation no-inherit) (storage shared) (create-accessor read-write)))
FuzzyCLIPS> (defclass C (is-a B)               ; DR0623
   (slot foo (source composite) (access read-only) (create-accessor read)))
FuzzyCLIPS> (describe-class C)                 ; DR0623
================================================================================
********************************************************************************
Abstract: direct instances of this class cannot be created.

Direct Superclasses: B
Inheritance Precedence: C B A USER OBJECT
Direct Subclasses:
--------------------------------------------------------------------------------
SLOTS : FLD DEF PRP ACC STO MCH SRC VIS CRT OVRD-MSG SOURCE(S)
foo   : MLT STC INH  R  SHR RCT CMP PRV  R  NIL      A C

Constraint information for slots:

SLOTS : SYM STR INN INA EXA FTA INT FLT
foo   :  +   +   +   +   +   +   +   +  RNG:[-oo..+oo] CRD:[0..+oo]
--------------------------------------------------------------------------------
Recognized message-handlers:
init primary in class USER
delete primary in class USER
create primary in class USER
print primary in class USER
direct-modify primary in class USER
message-modify primary in class USER
direct-duplicate primary in class USER
message-duplicate primary in class USER
get-foo primary in class A
put-foo primary in class A
get-foo primary in class B
put-foo primary in class B
get-foo primary in class C
********************************************************************************
================================================================================
FuzzyCLIPS> (clear)                            ; DR0625
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0625
TRUE
FuzzyCLIPS> (deftemplate a (field one))        ; DR0625 
FuzzyCLIPS> (defrule a                         ; DR0625
   ?f1 <- (a (one two three))
   =>)

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for deftemplate patterns.

ERROR:
(defrule MAIN::a
   ?f1 <- (a (one two three
FuzzyCLIPS> (clear)                            ; DR0625
FuzzyCLIPS> (progn (release-mem) TRUE)         ; DR0625 - Memory Loss
TRUE
FuzzyCLIPS> (clear)                            ; DR0626
FuzzyCLIPS> (deffacts one                      ; DR0626
   (first =(assert let's see)))    ; DR0626 - Bad PPForm

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for RHS patterns.

ERROR:
(deffacts MAIN::one
   (first =(assert let's
FuzzyCLIPS> (clear)                            ; DR0627
FuzzyCLIPS> (deftemplate a (field one))        ; DR0627
FuzzyCLIPS> (defrule a                         ; DR0627
   ?f1 <- (a (one two three))      ; DR0627
   =>                              ; DR0627
   (assert (not good)))            ; DR0627

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for deftemplate patterns.

ERROR:
(defrule MAIN::a
   ?f1 <- (a (one two three
FuzzyCLIPS> (clear)                            ; DR0628
FuzzyCLIPS> (defmethod foo (?a))               ; DR0628
FuzzyCLIPS> (defmethod foo ((?a NUMBER)))      ; DR0628
FuzzyCLIPS> (defmethod foo ((?a INTEGER FLOAT))) 
FuzzyCLIPS> (list-defmethods)                  ; DR0628 - Check Precedence
foo #3  (INTEGER FLOAT)
foo #2  (NUMBER)
foo #1  ()
For a total of 3 methods.
FuzzyCLIPS> (clear)                            ; DR0629
FuzzyCLIPS> (defclass A (is-a USER)            ; DR0629
   (role concrete)
   (multislot foo (default a) (create-accessor read-write)))
FuzzyCLIPS> (deffunction foo (?ins)            ; DR0629
   (bind ?a (send ?ins get-foo))
   (printout t ?a " ")
   (printout t (send ?ins get-foo) " ")
   (slot-replace$ ?ins foo 1 1 1)
   (printout t ?a " ")
   (printout t (send ?ins get-foo) crlf))
FuzzyCLIPS> (make-instance a of A)             ; DR0629
[a]
FuzzyCLIPS> (foo [a])                          ; DR0629 - (a) (a) (a) (1)
(a) (a) (a) (1)
FuzzyCLIPS> (clear)                            ; DR0630
FuzzyCLIPS> (defrule blah                      ; DR0630
   ?f <- (i-f)
   (test (progn (retract ?f) TRUE))
   =>)
FuzzyCLIPS> (assert (i-f))                     ; DR0630

[FACTMNGR1] Facts may not be retracted during pattern-matching.

[DRIVE1] This error occurred in the join network.
   Problem resides in associated join
      Of pattern #1 in rule blah

<Fact-1>
FuzzyCLIPS> (facts)                            ; DR0630
f-1     (i-f) CF 1.00 
For a total of 1 fact.
FuzzyCLIPS> (agenda)                           ; DR0630
FuzzyCLIPS> (clear)                            ; DR0630
FuzzyCLIPS> (assert (i-f))                     ; DR0630
<Fact-1>
FuzzyCLIPS> (defrule blah                      ; DR0630
   ?f <- (i-f)
   (test (progn (retract ?f) TRUE))
   =>)

[FACTMNGR1] Facts may not be retracted during pattern-matching.

[DRIVE1] This error occurred in the join network.
   Problem resides in associated join
      Of pattern #1 in rule blah

FuzzyCLIPS> (facts)                            ; DR0630
f-1     (i-f) CF 1.00 
For a total of 1 fact.
FuzzyCLIPS> (agenda)                           ; DR0630
FuzzyCLIPS> (clear)                            ; DR0634
FuzzyCLIPS> (deffunction foo ()                ; DR0634
   (bind ?i 1000)                  ; DR0634
   (while (> ?i 0) do              ; DR0634
      (bind ?a (create$))          ; DR0634
      (bind ?i (- ?i 1))))         ; DR0634
FuzzyCLIPS> (foo)                              ; DR0634
FALSE
FuzzyCLIPS> (clear)                            ; DR0635
FuzzyCLIPS> (format nil "1%N2%3$Q%d3%W" 5)     ; DR0635
[IOFUN3] Invalid format flag "%N" specified in format function.
""
FuzzyCLIPS> (clear)                            ; DR0636
FuzzyCLIPS> (defrule blah (fact $?x here $?x) =>)
FuzzyCLIPS> (assert (fact 1 2 here 3 4))       ; DR0636
<Fact-1>
FuzzyCLIPS> (agenda)                           ; DR0636
FuzzyCLIPS> (subsetp (create$ a a b) (create$ a b)) ; DR0637
TRUE
FuzzyCLIPS> (clear)                            ; DR0639
FuzzyCLIPS> (defrule foo (or (a) (b) (c)) =>)  ; DR0639
FuzzyCLIPS> (assert (a) (b) (c))               ; DR0639
<Fact-3>
FuzzyCLIPS> (agenda)                           ; DR0639
0      foo: f-3
0      foo: f-2
0      foo: f-1
For a total of 3 activations.
FuzzyCLIPS> (run)                              ; DR0639
FuzzyCLIPS> (refresh foo)                      ; DR0639
FuzzyCLIPS> (agenda)                           ; DR0639
0      foo: f-3
0      foo: f-2
0      foo: f-1
For a total of 3 activations.
FuzzyCLIPS> (clear)                            ; DR0640
FuzzyCLIPS> (defclass A (is-a USER) (role concrete)); DR0640
FuzzyCLIPS> (make-instance a of A)             ; DR0640
[a]
FuzzyCLIPS> (defglobal ?*x* = (instance-address a))
FuzzyCLIPS> (initialize-instance a)            ; DR0640
[a]
FuzzyCLIPS> (clear)                            ; DR0642
FuzzyCLIPS> (deffunction foo ()
   (do-for-all-instances ((?a USER)) TRUE (send ?a print))
   (printout t "Finished." crlf))
FuzzyCLIPS> (ppdeffunction foo)                ; DR0642
(deffunction MAIN::foo
   ()
   (do-for-all-instances ((?a USER))
      TRUE
      (send ?a print))
   (printout t "Finished." crlf))
FuzzyCLIPS> (clear)                            ; DR0644
FuzzyCLIPS> (ppdeffunction bad)                ; DR0644
[PRNTUTIL1] Unable to find deffunction 'bad'.
FuzzyCLIPS> (clear)                            ; DR0645
FuzzyCLIPS> (deffacts start (result # 0 1 0))
FuzzyCLIPS> (defrule print-responses
   (result $?input # $?response)
   =>
   (while (neq ?response (create$)) do
      (nth$ 1 ?response)
      (bind ?response (create$))))
FuzzyCLIPS> (reset)                            ; DR0645
FuzzyCLIPS> (run)                              ; DR0645
FuzzyCLIPS> (clear)                            ; DR0647
FuzzyCLIPS> (defclass A (is-a USER) (role abstract) (slot x (create-accessor read-write)))  ; DR0647
FuzzyCLIPS> (defclass B (is-a A))              ; DR0647
FuzzyCLIPS> (describe-class B)                 ; DR0647
================================================================================
********************************************************************************
Abstract: direct instances of this class cannot be created.

Direct Superclasses: A
Inheritance Precedence: B A USER OBJECT
Direct Subclasses:
--------------------------------------------------------------------------------
SLOTS : FLD DEF PRP ACC STO MCH SRC VIS CRT OVRD-MSG SOURCE(S)
x     : SGL STC INH RW  LCL RCT EXC PRV RW  put-x    A

Constraint information for slots:

SLOTS : SYM STR INN INA EXA FTA INT FLT
x     :  +   +   +   +   +   +   +   +  RNG:[-oo..+oo] 
--------------------------------------------------------------------------------
Recognized message-handlers:
init primary in class USER
delete primary in class USER
create primary in class USER
print primary in class USER
direct-modify primary in class USER
message-modify primary in class USER
direct-duplicate primary in class USER
message-duplicate primary in class USER
get-x primary in class A
put-x primary in class A
********************************************************************************
================================================================================
FuzzyCLIPS> (constructs-to-c bug 1 Temp/)      ; DR0647
[CSTRNCMP1] WARNING: Constraints are not saved with a constructs-to-c image
  when dynamic constraint checking is disabled.
  (except Fuzzy Value constraints are always saved)
FuzzyCLIPS> (describe-class B)                 ; DR0647
================================================================================
********************************************************************************
Abstract: direct instances of this class cannot be created.

Direct Superclasses: A
Inheritance Precedence: B A USER OBJECT
Direct Subclasses:
--------------------------------------------------------------------------------
SLOTS : FLD DEF PRP ACC STO MCH SRC VIS CRT OVRD-MSG SOURCE(S)
x     : SGL STC INH RW  LCL RCT EXC PRV RW  put-x    A

Constraint information for slots:

SLOTS : SYM STR INN INA EXA FTA INT FLT
x     :  +   +   +   +   +   +   +   +  RNG:[-oo..+oo] 
--------------------------------------------------------------------------------
Recognized message-handlers:
init primary in class USER
delete primary in class USER
create primary in class USER
print primary in class USER
direct-modify primary in class USER
message-modify primary in class USER
direct-duplicate primary in class USER
message-duplicate primary in class USER
get-x primary in class A
put-x primary in class A
********************************************************************************
================================================================================
FuzzyCLIPS> (clear)                            ; DR0648
FuzzyCLIPS> (bsave "Temp//none.bin")           ; DR0648
TRUE
FuzzyCLIPS> (deffunction one ())               ; DR0648
FuzzyCLIPS> (bsave "Temp//some.bin")           ; DR0648
TRUE
FuzzyCLIPS> (bload "Temp//none.bin")           ; DR0648
TRUE
FuzzyCLIPS> (clear)                            ; DR0649
FuzzyCLIPS> (div a)                            ; DR0649
[ARGACCES1] Function 'div' expected at least 2 arguments.
FuzzyCLIPS> (div 1)                            ; DR0649
[ARGACCES1] Function 'div' expected at least 2 arguments.
FuzzyCLIPS> (asin 2)                           ; DR0649
[EMATHFUN1] Domain error for 'asin' function.
0.0
FuzzyCLIPS> (atanh 1.0)                        ; DR0649
[EMATHFUN1] Domain error for 'atanh' function.
0.0
FuzzyCLIPS> (clear)                            ; DR0650
FuzzyCLIPS> (deffacts foo)                     ; DR0650
FuzzyCLIPS> (defrule foo =>)                   ; DR0650
FuzzyCLIPS> (deftemplate foo)                  ; DR0650
FuzzyCLIPS> (deffacts *)                       ; DR0650
FuzzyCLIPS> (defrule * =>)                     ; DR0650
FuzzyCLIPS> (deftemplate *)                    ; DR0650
FuzzyCLIPS> (list-deffacts)                    ; DR0650
foo
*
For a total of 2 deffacts.
FuzzyCLIPS> (list-defrules)                    ; DR0650
foo
*
For a total of 2 defrules.
FuzzyCLIPS> (list-deftemplates)                ; DR0650
foo
*
For a total of 2 deftemplates.
FuzzyCLIPS> (clear)                            ; DR0654
FuzzyCLIPS> (fetch "XYZBEDQ.txt")              ; DR0654
[TEXTPRO1] Could not open file 'XYZBEDQ.txt'.
FALSE
FuzzyCLIPS> (clear)                            ; DR0655
FuzzyCLIPS> (defclass A (is-a USER) (slot x (create-accessor read-write)))  ; DR0655
FuzzyCLIPS> (defclass B (is-a A) (slot y (create-accessor read-write)))     ; DR0655
FuzzyCLIPS> (defmessage-handler B get-y ())    ; DR0655
[MSGPSR3] System message-handlers may not be modified.

ERROR:
(defmessage-handler MAIN::B get-y
   (
FuzzyCLIPS> (clear)                            ; DR0656
FuzzyCLIPS> (defclass A (is-a USER) (role concrete) (multislot x (create-accessor read-write)))
FuzzyCLIPS> (make-instance a of A (x (instance-address a) 34))
[a]
FuzzyCLIPS> (save-instances "Temp//ins.sav")   ; DR0656
1
FuzzyCLIPS> (clear)                            ; DR0657
FuzzyCLIPS> (defclass A (is-a USER) (role concrete) (slot x (create-accessor read-write)))
FuzzyCLIPS> (defmessage-handler A foo (?a) 
   (bind ?x 1)
   (bind ?y 2)
   (put x ?self)) 
FuzzyCLIPS> (make-instance a of A)             ; DR0657
[a]
FuzzyCLIPS> (send [a] foo 1)                   ; DR0657
<Instance-a>
FuzzyCLIPS> (clear)                            ; DR0658
FuzzyCLIPS> (defclass A (is-a USER) (role concrete) (multislot x (create-accessor read-write)))
FuzzyCLIPS> (make-instance a of A)             ; DR0658
[a]
FuzzyCLIPS> (slot-insert$ [a] x 1 abc)         ; DR0658
(abc)
FuzzyCLIPS> (clear)                            ; DR0659
FuzzyCLIPS> (defclass a (is-a USER) ())        ; DR0659

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for defclass.

ERROR:
(defclass MAIN::a
   (is-a USER)
   ()
FuzzyCLIPS> (defclass b (is-a USER) (slot))    ; DR0659

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for defclass slot.

ERROR:
(defclass MAIN::b
   (is-a USER)
   (slot )
FuzzyCLIPS> (list-defclasses)                  ; DR0659
FLOAT
INTEGER
SYMBOL
STRING
MULTIFIELD
EXTERNAL-ADDRESS
FACT-ADDRESS
INSTANCE-ADDRESS
INSTANCE-NAME
FUZZY-VALUE
OBJECT
PRIMITIVE
NUMBER
LEXEME
ADDRESS
INSTANCE
USER
For a total of 17 defclasses.
FuzzyCLIPS> (clear)                            ; DR0660
FuzzyCLIPS> (definstances bad (a of))          ; DR0660

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for instance class.

ERROR:
(definstances MAIN::bad
   (a of )
FuzzyCLIPS> (clear)                            ; DR0661
FuzzyCLIPS> (definstances bad (a of BOGUS))    ; DR0661
[PRNTUTIL1] Unable to find class 'BOGUS'.

ERROR:
(definstances MAIN::bad
   (a of BOGUS
FuzzyCLIPS> (reset)                            ; DR0661
FuzzyCLIPS> (facts)                            ; DR0661
FuzzyCLIPS> (clear)                            ; DR0662
FuzzyCLIPS> (sub-string 0 0 abc)               ; DR0662
""
FuzzyCLIPS> (clear)                            ; DR0663
FuzzyCLIPS> (defmessage-handler USER * ())     ; DR0663
FuzzyCLIPS> (list-defmessage-handlers USER)    ; DR0663 - changed
init primary in class USER
delete primary in class USER
create primary in class USER
print primary in class USER
direct-modify primary in class USER
message-modify primary in class USER
direct-duplicate primary in class USER
message-duplicate primary in class USER
* primary in class USER
For a total of 9 message-handlers.
FuzzyCLIPS> (clear)                            ; DR0664
FuzzyCLIPS> (defglobal ?*x* = 0)               ; DR0664
FuzzyCLIPS> (defclass A (is-a USER)            ; DR0664
   (slot x (default ?*x*) (create-accessor read-write))
   (slot y (default-dynamic ?*x*) (create-accessor read-write)))
FuzzyCLIPS> (clear)                            ; DR0665
FuzzyCLIPS> (preview-send OBJECT bogus)        ; DR0665
[MSGFUN1] No applicable primary message-handlers found for 'bogus'.
FuzzyCLIPS> (clear)                            ; DR0666
FuzzyCLIPS> (defglobal ?*x* = 300)             ; DR0666
FuzzyCLIPS> (defclass A (is-a USER) (role concrete)); DR0666
FuzzyCLIPS> (make-instance a of A)             ; DR0666
[a]
FuzzyCLIPS> (while (> ?*x* 0) do 
   (any-instancep ((?a A)) TRUE)
   (bind ?*x* (- ?*x* 1)))
FALSE
FuzzyCLIPS> (do-for-all-instances ((?a A)) TRUE (printout t "Foo!" crlf))
Foo!
FuzzyCLIPS> (clear)                            ; DR0668
FuzzyCLIPS> (defclass a (is-a USER) (role abstract))
FuzzyCLIPS> (defclass b (is-a USER) (role abstract))
FuzzyCLIPS> (defclass c (is-a a b))            ; DR0668
FuzzyCLIPS> (defclass d (is-a a))              ; DR0668
FuzzyCLIPS> (defclass e (is-a c d))            ; DR0668
FuzzyCLIPS> (clear)                            ; DR0668
FuzzyCLIPS> (defclass a (is-a USER) (role abstract))
FuzzyCLIPS> (defclass b (is-a USER) (role abstract))
FuzzyCLIPS> (defclass c (is-a a))              ; DR0668
FuzzyCLIPS> (defclass d (is-a b))              ; DR0668
FuzzyCLIPS> (defclass e (is-a c d))            ; DR0668
FuzzyCLIPS> (defclass f (is-a e a b))          ; DR0668
FuzzyCLIPS> (describe-class f)                 ; DR0668
================================================================================
********************************************************************************
Abstract: direct instances of this class cannot be created.

Direct Superclasses: e a b
Inheritance Precedence: f e c a d b USER OBJECT
Direct Subclasses:
--------------------------------------------------------------------------------
Recognized message-handlers:
init primary in class USER
delete primary in class USER
create primary in class USER
print primary in class USER
direct-modify primary in class USER
message-modify primary in class USER
direct-duplicate primary in class USER
message-duplicate primary in class USER
********************************************************************************
================================================================================
FuzzyCLIPS> (clear)                            ; DR0670
FuzzyCLIPS> (defrule foo => (close blah))      ; DR0670
FuzzyCLIPS> (reset)                            ; DR0670
FuzzyCLIPS> (run)                              ; DR0670
FuzzyCLIPS> (clear)                            ; DR0672
FuzzyCLIPS> (defglobal ?*x* = (create$ a b c d))
FuzzyCLIPS> (deffunction foo ()
   (bind ?y ?*x*)
   (printout t ?y " " ?*x* crlf)
   (bind ?*x* (create$ e f g h))
   (printout t ?y " " ?*x* crlf))
FuzzyCLIPS> (foo)                              ; DR0672
(a b c d) (a b c d)
(a b c d) (e f g h)
FuzzyCLIPS> (clear)
FuzzyCLIPS> (deffacts initial (factoid))
FuzzyCLIPS> (reset)                   ; DR0675
FuzzyCLIPS> (defrule foo (factoid) (test (> 4 3)) =>)
FuzzyCLIPS> (agenda)
0      foo: f-1
For a total of 1 activation.
FuzzyCLIPS> (assert (a))
<Fact-2>
FuzzyCLIPS> (defrule bar (factoid) (or (test (> 5 3)) (a)) =>)
FuzzyCLIPS> (agenda)
0      bar: f-1,f-2
0      bar: f-1
0      foo: f-1
For a total of 3 activations.
FuzzyCLIPS> (reset)
FuzzyCLIPS> (assert (a))
<Fact-2>
FuzzyCLIPS> (agenda)
0      bar: f-1,f-2
0      foo: f-1
0      bar: f-1
For a total of 3 activations.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defmethod foo (?a)       ; DR0676
  (bind ?b 10)
  (call-next-method)
  ?b)
FuzzyCLIPS> (defmethod foo ($?any)
  (bind ?b 20))
FuzzyCLIPS> (foo bar)
10
FuzzyCLIPS> (clear)
FuzzyCLIPS> (call-next-method 0)      ; DR0677
[ARGACCES1] Function 'call-next-method' expected exactly 0 arguments.
FuzzyCLIPS> (next-methodp 0)
[ARGACCES1] Function 'next-methodp' expected exactly 0 arguments.
FuzzyCLIPS> (preview-generic)
[ARGACCES1] Function 'preview-generic' expected at least 1 argument.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (delete-instance 0)       ; DR0678
[ARGACCES1] Function 'delete-instance' expected exactly 0 arguments.
FuzzyCLIPS> (init-slots 0)
[ARGACCES1] Function 'init-slots' expected exactly 0 arguments.
FuzzyCLIPS> (ppinstance 0)
[ARGACCES1] Function 'ppinstance' expected exactly 0 arguments.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (print-region 1 2 3)      ; DR0679
[ARGACCES2] Function 'print-region' expected argument #1 to be of type symbol.
FuzzyCLIPS> (print-region t 2 3)
[ARGACCES2] Function 'print-region' expected argument #2 to be of type symbol or string.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defclass A (is-a USER))  ; DR0680
FuzzyCLIPS> (class-superclasses A inherit)
(USER OBJECT)
FuzzyCLIPS> (defclass A (is-a USER))
FuzzyCLIPS> (class-superclasses A inherit)
(USER OBJECT)
FuzzyCLIPS> (clear)
FuzzyCLIPS> ;; DRs 0681, 0682 and 0683 involve recompiling CLIPS
(while 1 do ?a)           ; DR0684
[EVALUATN1] Variable ?a is unbound.
FALSE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (printout t ?a crlf)      ; DR0685
[EVALUATN1] Variable ?a is unbound.
FuzzyCLIPS> (defrule foo =>
   (printout t ?a)
   (bind ?a 1))
FuzzyCLIPS> (reset)
FuzzyCLIPS> (run)
[PRCCODE5] Variable ?a unbound.
[PRCCODE4] Execution halted during the actions of defrule 'foo'.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (str-cat abc (eval "(+ abc)") def) ; DR0686
[ARGACCES1] Function '+' expected at least 2 arguments.
""
FuzzyCLIPS> (sym-cat abc (eval "(+ abc)") def)
[ARGACCES1] Function '+' expected at least 2 arguments.
nil
FuzzyCLIPS> (clear)
FuzzyCLIPS> (deffunction foo (?a))    ; DR0687
FuzzyCLIPS> (foo (eval "(+ abc)"))
[ARGACCES1] Function '+' expected at least 2 arguments.
[PRCCODE6] This error occurred while evaluating arguments for the deffunction 'foo'.
FALSE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defgeneric any-instancep) ; DR0688
[GENRCPSR16] The system function 'any-instancep' cannot be overloaded.

ERROR:
(defgeneric MAIN::any-instancep)
FuzzyCLIPS> (defgeneric assert)
[GENRCPSR16] The system function 'assert' cannot be overloaded.

ERROR:
(defgeneric MAIN::assert)
FuzzyCLIPS> (defgeneric bind)
[GENRCPSR16] The system function 'bind' cannot be overloaded.

ERROR:
(defgeneric MAIN::bind)
FuzzyCLIPS> (defgeneric break)
[GENRCPSR16] The system function 'break' cannot be overloaded.

ERROR:
(defgeneric MAIN::break)
FuzzyCLIPS> (defgeneric call-next-handler)
[GENRCPSR16] The system function 'call-next-handler' cannot be overloaded.

ERROR:
(defgeneric MAIN::call-next-handler)
FuzzyCLIPS> (defgeneric call-next-method)
[GENRCPSR16] The system function 'call-next-method' cannot be overloaded.

ERROR:
(defgeneric MAIN::call-next-method)
FuzzyCLIPS> (defgeneric delayed-do-for-all-instances)
[GENRCPSR16] The system function 'delayed-do-for-all-instances' cannot be overloaded.

ERROR:
(defgeneric MAIN::delayed-do-for-all-instances)
FuzzyCLIPS> (defgeneric do-for-all-instances)
[GENRCPSR16] The system function 'do-for-all-instances' cannot be overloaded.

ERROR:
(defgeneric MAIN::do-for-all-instances)
FuzzyCLIPS> (defgeneric do-for-instance)
[GENRCPSR16] The system function 'do-for-instance' cannot be overloaded.

ERROR:
(defgeneric MAIN::do-for-instance)
FuzzyCLIPS> (defgeneric duplicate)
[GENRCPSR16] The system function 'duplicate' cannot be overloaded.

ERROR:
(defgeneric MAIN::duplicate)
FuzzyCLIPS> (defgeneric expand$)
[GENRCPSR16] The system function 'expand$' cannot be overloaded.

ERROR:
(defgeneric MAIN::expand$)
FuzzyCLIPS> (defgeneric find-all-instances)
[GENRCPSR16] The system function 'find-all-instances' cannot be overloaded.

ERROR:
(defgeneric MAIN::find-all-instances)
FuzzyCLIPS> (defgeneric find-instance)
[GENRCPSR16] The system function 'find-instance' cannot be overloaded.

ERROR:
(defgeneric MAIN::find-instance)
FuzzyCLIPS> (defgeneric if)
[GENRCPSR16] The system function 'if' cannot be overloaded.

ERROR:
(defgeneric MAIN::if)
FuzzyCLIPS> (defgeneric initialize-instance)
[GENRCPSR16] The system function 'initialize-instance' cannot be overloaded.

ERROR:
(defgeneric MAIN::initialize-instance)
FuzzyCLIPS> (defgeneric make-instance)
[GENRCPSR16] The system function 'make-instance' cannot be overloaded.

ERROR:
(defgeneric MAIN::make-instance)
FuzzyCLIPS> (defgeneric modify)
[GENRCPSR16] The system function 'modify' cannot be overloaded.

ERROR:
(defgeneric MAIN::modify)
FuzzyCLIPS> (defgeneric next-handlerp)
[GENRCPSR16] The system function 'next-handlerp' cannot be overloaded.

ERROR:
(defgeneric MAIN::next-handlerp)
FuzzyCLIPS> (defgeneric next-methodp)
[GENRCPSR16] The system function 'next-methodp' cannot be overloaded.

ERROR:
(defgeneric MAIN::next-methodp)
FuzzyCLIPS> (defgeneric override-next-handler)
[GENRCPSR16] The system function 'override-next-handler' cannot be overloaded.

ERROR:
(defgeneric MAIN::override-next-handler)
FuzzyCLIPS> (defgeneric progn)
[GENRCPSR16] The system function 'progn' cannot be overloaded.

ERROR:
(defgeneric MAIN::progn)
FuzzyCLIPS> (defgeneric retract)
FuzzyCLIPS> (defgeneric return)
[GENRCPSR16] The system function 'return' cannot be overloaded.

ERROR:
(defgeneric MAIN::return)
FuzzyCLIPS> (defgeneric while)
[GENRCPSR16] The system function 'while' cannot be overloaded.

ERROR:
(defgeneric MAIN::while)
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defmethod blah  ;; DR0689
  ((?a (progn (undefmethod blah *) TRUE))))
FuzzyCLIPS> (blah 1)
[GENRCFUN1] Defgeneric 'blah' cannot be modified while one of its methods is executing.
FALSE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defgeneric foo)  ;; DR0690
FuzzyCLIPS> (foo (progn (undefgeneric foo) 1))
[PRNTUTIL4] Unable to delete defgeneric 'foo'.
[GENRCEXE1] No applicable methods for 'foo'.
FALSE
FuzzyCLIPS> (deffunction bar (?a))
FuzzyCLIPS> (bar (progn (undeffunction bar) 1))
[PRNTUTIL4] Unable to delete deffunction 'bar'.
FALSE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (printout t (eval "(+ abc)") " OOPS " (eval "(+ abc)") crlf)  ;; DR0691
[ARGACCES1] Function '+' expected at least 2 arguments.
FuzzyCLIPS> (clear)
FuzzyCLIPS> (deftemplate foo             ;; DR0692
  (multifield linkTagList))
FuzzyCLIPS> (defrule foo
   ?w<-(foo)
   =>
   (modify ?w (linkTagList ?linktag ?linktagx ?a $?b)))

[PRCCODE3] Undefined variable ?linktag referenced in RHS of defrule.

ERROR:
(defrule MAIN::foo
   ?w <- (foo)
   =>
   (modify ?w (linkTagList ?linktag ?linktagx ?a $?b)))
FuzzyCLIPS> (clear)
FuzzyCLIPS> (unwatch all)  ;; DR0693
FuzzyCLIPS> (defrule foo (logical (not (a))) => (assert (b)))
FuzzyCLIPS> (watch facts)
FuzzyCLIPS> (reset)
FuzzyCLIPS> (run)
==> f-1     (b) CF 1.00 
FuzzyCLIPS> (assert (a))
==> f-2     (a) CF 1.00 
<== f-1     (b) CF 1.00 
<Fact-2>
FuzzyCLIPS> (reset)
<== f-2     (a) CF 1.00 
FuzzyCLIPS> (defrule bar (declare (salience -1)) => (assert (a)))
FuzzyCLIPS> (run)
==> f-1     (b) CF 1.00 
==> f-2     (a) CF 1.00 
<== f-1     (b) CF 1.00 
FuzzyCLIPS> (unwatch all)
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defclass A (is-a USER) (role concrete)
  (slot foo (create-accessor read-write))
  (multislot bar (create-accessor read-write))) ;; DR0697 and DR0700
FuzzyCLIPS> (make-instance fribban of A)
[fribban]
FuzzyCLIPS> (make-instance quoxnar of A)
[quoxnar]
FuzzyCLIPS> (send [quoxnar] put-foo (instance-address [fribban]))
<Instance-fribban>
FuzzyCLIPS> (send [quoxnar] put-bar (create$))
()
FuzzyCLIPS> (unmake-instance [fribban])
TRUE
FuzzyCLIPS> (send (send [quoxnar] get-foo) print)
[INSFUN4] Invalid instance-address in function 'send'.
FALSE
FuzzyCLIPS> (save-instances "Temp//badfile.tmp")
1
FuzzyCLIPS> (reset)
FuzzyCLIPS> (restore-instances "Temp//badfile.tmp")
1
FuzzyCLIPS> (send [quoxnar] print)
[quoxnar] of A
(foo [fribban])
(bar)
FuzzyCLIPS> (clear)
FuzzyCLIPS> (defglobal ?*x* = 0) ;; DR0698 and DR0701
FuzzyCLIPS> (deffunction create-number-2 ()
  (bind ?*x* (nth$ 1 (explode$ "2.0")))
  BOGUS)
FuzzyCLIPS> (deffunction create-number ()
  (create-number-2))
FuzzyCLIPS> (deffunction force-garbage-collection ()
  (bind ?i 0)      
  (while (< ?i 10000) do
    (gensym*)
    (bind ?i (+ ?i 1))))
FuzzyCLIPS> (create$ (create-number) ?*x* (bind ?*x* 0)
  (force-garbage-collection) (float (random))
     (float (random)))
(BOGUS 2.0 0 FALSE 29601.0 26138.0) ;; Last two fields can be different
FuzzyCLIPS> (clear)
FuzzyCLIPS> (deffunction foo ()      ;; DR0699
   (printout t Foo crlf))
FuzzyCLIPS> (defmethod bar () (foo))
FuzzyCLIPS> (bar)
Foo
FuzzyCLIPS> (undeffunction *)
[DFFNXFUN1] WARNING: Deffunction 'foo' only partially deleted due to usage by other constructs.
FuzzyCLIPS> (bar)
FALSE
FuzzyCLIPS> (ppdeffunction foo)
FuzzyCLIPS> (clear) ;; DR0700
FuzzyCLIPS> (defclass A (is-a USER) (role concrete) (multislot foo (create-accessor read-write)))
FuzzyCLIPS> (make-instance a of A (foo (create$)))
[a]
FuzzyCLIPS> (send [a] print)
[a] of A
(foo)
FuzzyCLIPS> (save-instances "Temp//ins.tmp")
1
FuzzyCLIPS> (unmake-instance [a])
TRUE
FuzzyCLIPS> (load-instances "Temp//ins.tmp")
1
FuzzyCLIPS> (send [a] print)
[a] of A
(foo)
FuzzyCLIPS> (clear) ;; DR0704
FuzzyCLIPS> (defrule foo => (printout t [hdh] crlf))
FuzzyCLIPS> (reset)
FuzzyCLIPS> (run)
[hdh]
FuzzyCLIPS> (bsave "Temp//foo.bin")
TRUE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (bload "Temp//foo.bin")
TRUE
FuzzyCLIPS> (clear)
FuzzyCLIPS> (dribble-off)
