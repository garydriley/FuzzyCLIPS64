TRUE
FuzzyCLIPS> (batch "misclns1.bat")
TRUE
FuzzyCLIPS> (clear) ; Test Begin   
FuzzyCLIPS> (defglobal ?*constraint-salience* = 0)
FuzzyCLIPS> (defrule bar 
  (declare (salience ?*constraint-salience*))
  ?f <- (x ?y&?x) 
  => 
  (retract ?ins))

[ANALYSIS4] Variable ?x was referenced in CE #1 field #1 before being defined.

ERROR:
(defrule MAIN::bar
   (declare (salience ?*constraint-salience*))
   ?f <- (x ?y&?x)
   =>
   (retract ?ins))
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (defrule foo
  (declare (salience ?*my-salience*)) =>)
[GLOBLDEF1] Global variable ?*my-salience* is unbound.

[PRNTUTIL8] This error occurred while evaluating the salience for defrule 'foo'.

ERROR:
(defrule MAIN::foo
   (declare (salience ?*my-salience*
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate status 
   (field parent))
FuzzyCLIPS> (deffacts initial-positions
  (status (parent nil)))
FuzzyCLIPS> (defrule move-alone 
  ?node <- (status (parent nil))
  =>
  (duplicate ?node (parent ?node)))
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (defclass A (is-a USER) (role concrete) (pattern-match reactive))
FuzzyCLIPS> (deffacts bar (a))
FuzzyCLIPS> (definstances bar (a of A))
FuzzyCLIPS> (defrule foo1 
  (logical (a))
  => 
  (assert (b)))
FuzzyCLIPS> (defrule foo2 
  (logical (a))
  => 
  (make-instance [b] of A))
FuzzyCLIPS> (defrule foo3 
  (logical (object (name [a])))
  => 
  (assert (c)))
FuzzyCLIPS> (defrule foo4 
  (logical (object (name [a])))
  => 
  (make-instance [c] of A))
FuzzyCLIPS> (reset)
FuzzyCLIPS> (run)
FuzzyCLIPS> (dependents 1)
[b],f-2
FuzzyCLIPS> (dependents 2)
None
FuzzyCLIPS> (dependents 3)
None
FuzzyCLIPS> (dependents [a])
[c],f-3
FuzzyCLIPS> (dependents [b])
None
FuzzyCLIPS> (dependents [c])
None
FuzzyCLIPS> (dependencies 1)
None
FuzzyCLIPS> (dependencies 2)
f-1
FuzzyCLIPS> (dependencies 3)
[a]
FuzzyCLIPS> (dependencies [a])
None
FuzzyCLIPS> (dependencies [b])
f-1
FuzzyCLIPS> (dependencies [c])
[a]
FuzzyCLIPS> (bind ?v (assert (a b c)))
<Fact-4>
FuzzyCLIPS> (retract ?v)
FuzzyCLIPS> (dependents ?v)
[PRNTUTIL11] The fact f-4 has been retracted.
FuzzyCLIPS> (dependencies ?v)
[PRNTUTIL11] The fact f-4 has been retracted.
FuzzyCLIPS> (bind ?v (instance-address [c]))
<Instance-c>
FuzzyCLIPS> (send ?v delete)
TRUE
FuzzyCLIPS> (dependents ?v)
[PRNTUTIL1] Unable to find instance c.
FuzzyCLIPS> (dependencies ?v)
[PRNTUTIL1] Unable to find instance c.
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate yak (multifield x (type SYMBOL) (cardinality 3 5)))
FuzzyCLIPS> (assert (yak (x a b c)))
<Fact-1>
FuzzyCLIPS> (assert (yak (x a b 1)))

[CSTRNCHK1] A literal slot value found in the 'assert' command does not match the allowed types for slot 'x'.
FuzzyCLIPS> (assert (yak (x 1 b 1)))

[CSTRNCHK1] A literal slot value found in the 'assert' command does not match the allowed types for slot 'x'.
FuzzyCLIPS> (assert (yak (x a b)))

[CSTRNCHK1] Literal slot values found in the 'assert' command does not satisfy the cardinality restrictions for slot 'x'.
FuzzyCLIPS> (assert (yak (x a b c d e f)))

[CSTRNCHK1] Literal slot values found in the 'assert' command does not satisfy the cardinality restrictions for slot 'x'.
FuzzyCLIPS> (assert (yak (x a b c d e f g 1)))

[CSTRNCHK1] Literal slot values found in the 'assert' command does not satisfy the cardinality restrictions for slot 'x'.
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (defrule foo (x ? ? ? ? ?) =>)
FuzzyCLIPS> (defrule bar (x ? ? ? ? ?x&:(> ?x 3)) =>)
FuzzyCLIPS> (deffacts yak (x a a a a abc))
FuzzyCLIPS> (reset)
[ARGACCES2] Function '>' expected argument #1 to be of type integer or float.

[FACTMCH1] This error occurred in the fact pattern network.
   Currently active fact: (x a a a a abc) CF 1.00 
   Problem resides in field #5
      Of pattern #1 in rule bar

FuzzyCLIPS> (clear)
FuzzyCLIPS> (defrule foo (x ?) =>)
FuzzyCLIPS> (defrule bar (x ?x&:(> ?x 3)) =>)
FuzzyCLIPS> (deffacts yak (x abc))
FuzzyCLIPS> (reset)
[ARGACCES2] Function '>' expected argument #1 to be of type integer or float.

[FACTMCH1] This error occurred in the fact pattern network.
   Currently active fact: (x abc) CF 1.00 
   Problem resides in field #1
      Of pattern #1 in rule bar

FuzzyCLIPS> (clear)
FuzzyCLIPS> (deftemplate x (field q) (field r) (field s) (field t))
FuzzyCLIPS> (defrule foo (x (t ?)) =>)
FuzzyCLIPS> (defrule bar (x (t ?x&:(> ?x 3))) =>)
FuzzyCLIPS> (deffacts yak (x (t abc)))
FuzzyCLIPS> (reset)
[ARGACCES2] Function '>' expected argument #1 to be of type integer or float.

[FACTMCH1] This error occurred in the fact pattern network.
   Currently active fact: (x (q nil) (r nil) (s nil) (t abc)) CF 1.00 
   Problem resides in slot t
      Of pattern #1 in rule bar

FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deffunction positive-slope
   (?x1 ?y1 ?x2 ?y2)
   (< 0 (/ (- ?y2 ?y1) (- ?x2 ?x1))))
FuzzyCLIPS> (defrule example-2
   (point ?a ?x1 ?y1)
   (point ?b ?x2 ?y2)
   (test (> ?b ?a))
   (test (positive-slope ?x1 ?y1 ?x2 ?y2))
   =>)
FuzzyCLIPS> (assert (point 1 4.0 7.0) (point 2 5.0 9.0))
<Fact-2>
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate A (field foo (type INTEGER)))
FuzzyCLIPS> (defrule foo (A (foo ?y&:(< ?y 3))) =>)
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate A
   (field grid-x)
   (field max)
   (field min-xy)
   (field max-xy))
FuzzyCLIPS> (defrule p327
  (A (min-xy ?min) (max-xy ?max))
  (A (grid-x ?gx&:(and (>= ?gx ?min) (> ?gx ?max))))
  (A (max ?hmax&:(and (>= ?hmax ?gx) (> ?hmax ?min))))
  =>)
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate foo
   (field x (type INTEGER))
   (field y (type STRING))
   (field z (type FLOAT)))
FuzzyCLIPS> (deftemplate bar
   (field x (type INTEGER))
   (field y (type STRING))
   (field z (type FLOAT)))
FuzzyCLIPS> (defrule bad-1 (foo (x ?x) (y ?x)) =>)

[RULECSTR1] Variable ?x in CE #1 slot 'y' has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::bad-1
   (foo (x ?x) (y ?x))
   =>)
FuzzyCLIPS> (defrule bad-2 (foo (x ?x)) (bar (y ?x)) =>)

[RULECSTR1] Variable ?x in CE #2 slot 'y' has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::bad-2
   (foo (x ?x))
   (bar (y ?x))
   =>)
FuzzyCLIPS> (defrule bad-3 (foo (x ?x) (y ?y)) (bar (z ?x | ?y)) =>)

[RULECSTR1] Pattern #2 slot 'z' has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::bad-3
   (foo (x ?x) (y ?y))
   (bar (z ?x|?y))
   =>)
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (defrule fin
  (foo ?d)
  (test (> ?d 2))
  (foo ?l&~?d)
  =>)
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (deftemplate foo1 (field x (cardinality 3 4)))

[CSTRNPSR5] The 'cardinality' attribute can only be used with multifield slots.

ERROR:
(deftemplate MAIN::foo1
   (field x (cardinality
FuzzyCLIPS> (deftemplate foo2 (multifield x (cardinality 3.0 4)))

[PRNTUTIL2] Syntax Error:  Check appropriate syntax for cardinality attribute.

ERROR:
(deftemplate MAIN::foo2
   (multifield x (cardinality 3.0
FuzzyCLIPS> (deftemplate foo3 (multifield x (cardinality 6 4)))

[CSTRNPSR2] Minimum 'cardinality' value must be less than or equal to the maximum 'cardinality' value.

ERROR:
(deftemplate MAIN::foo3
   (multifield x (cardinality 6 4)
FuzzyCLIPS> (clear) ; Test Begin
FuzzyCLIPS> (defrule foo 
  (blah $?x ?y&red $?z)
  =>
  (printout t  ?x " | " ?y " | " ?z crlf))
FuzzyCLIPS> (defrule bar 
  (yech $?x $?y)
  =>
  (printout t ?x " | " ?y crlf))
FuzzyCLIPS> (assert (blah red) (blah red red) (blah a red b) (blah a red red b))
<Fact-4>
FuzzyCLIPS> (assert (yech) (yech 1 2) (yech 1 2 3))
<Fact-7>
FuzzyCLIPS> (run)
() | (1 2 3)
(1) | (2 3)
(1 2) | (3)
(1 2 3) | ()
() | (1 2)
(1) | (2)
(1 2) | ()
() | ()
(a) | red | (red b)
(a red) | red | (b)
(a) | red | (b)
() | red | (red)
(red) | red | ()
() | red | ()
FuzzyCLIPS> (clear)
FuzzyCLIPS> (dribble-off)
